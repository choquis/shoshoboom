{
  "associatedLayout": "Test Scene",
  "name": "Player Logic",
  "events": [
    {
      "colorB": 82,
      "colorG": 68,
      "colorR": 62,
      "creationTime": 0,
      "name": "Player logic",
      "source": "",
      "type": "BuiltinCommonInstructions::Group",
      "events": [
        {
          "colorB": 82,
          "colorG": 68,
          "colorR": 62,
          "creationTime": 0,
          "name": "Sight",
          "source": "",
          "type": "BuiltinCommonInstructions::Group",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 52,
                "g": 44,
                "r": 40,
                "textB": 255,
                "textG": 255,
                "textR": 255
              },
              "comment": "Invert Y for the coordinals"
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "value": "SetNumberVariable"
                  },
                  "parameters": [
                    "LookX",
                    "=",
                    "MAINGAME.Input.LookX"
                  ]
                },
                {
                  "type": {
                    "value": "SetNumberVariable"
                  },
                  "parameters": [
                    "LookY",
                    "=",
                    "MAINGAME.Input.LookY"
                  ]
                }
              ],
              "events": [
                {
                  "type": "BuiltinCommonInstructions::Comment",
                  "color": {
                    "b": 52,
                    "g": 44,
                    "r": 40,
                    "textB": 255,
                    "textG": 255,
                    "textR": 255
                  },
                  "comment": "Adjustment for mouse control. And in case the camera follow the player"
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "StringVariable"
                      },
                      "parameters": [
                        "_CONFIG_.Players[0].InputType",
                        "=",
                        "_CONSTANTS_.InputType.Keyboard"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "SetNumberVariable"
                      },
                      "parameters": [
                        "LookX",
                        "=",
                        "LookX + CameraX - Player0.CenterX()"
                      ]
                    },
                    {
                      "type": {
                        "value": "SetNumberVariable"
                      },
                      "parameters": [
                        "LookY",
                        "=",
                        "LookY + CameraY - Player0.CenterY()"
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "value": "SetNumberVariable"
                      },
                      "parameters": [
                        "LookAngle",
                        "=",
                        "AngleBetweenPositions(0, 0, LookX, LookY)"
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "value": "CustomObjects::Tank::LookTo"
                      },
                      "parameters": [
                        "Player0",
                        "LookAngle",
                        ""
                      ]
                    }
                  ]
                }
              ],
              "variables": [
                {
                  "name": "LookX",
                  "type": "number",
                  "value": 0
                },
                {
                  "name": "LookY",
                  "type": "number",
                  "value": 0
                },
                {
                  "name": "LookAngle",
                  "type": "number",
                  "value": 0
                }
              ]
            }
          ],
          "parameters": []
        },
        {
          "type": "BuiltinCommonInstructions::Comment",
          "color": {
            "b": 52,
            "g": 44,
            "r": 40,
            "textB": 255,
            "textG": 255,
            "textR": 255
          },
          "comment": "\n\n"
        },
        {
          "colorB": 82,
          "colorG": 68,
          "colorR": 62,
          "creationTime": 0,
          "name": "Show Cursor",
          "source": "",
          "type": "BuiltinCommonInstructions::Group",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 52,
                "g": 44,
                "r": 40,
                "textB": 255,
                "textG": 255,
                "textR": 255
              },
              "comment": "Draw/Snap cursor"
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "value": "SetNumberVariable"
                  },
                  "parameters": [
                    "LookAngle",
                    "=",
                    "Player0.LookAngle()"
                  ]
                }
              ],
              "events": [
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "StringVariable"
                      },
                      "parameters": [
                        "_CONFIG_.Players[0].InputType",
                        "=",
                        "_CONSTANTS_.InputType.Keyboard"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "SetNumberVariable"
                      },
                      "parameters": [
                        "LookX",
                        "=",
                        "MAINGAME.Input.LookX + CameraX"
                      ]
                    },
                    {
                      "type": {
                        "value": "SetNumberVariable"
                      },
                      "parameters": [
                        "LookY",
                        "=",
                        "MAINGAME.Input.LookY + CameraY"
                      ]
                    }
                  ],
                  "events": [
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "RaycastToPosition"
                          },
                          "parameters": [
                            "CursorCollisions",
                            "Player0.MuzzleX()",
                            "Player0.MuzzleY()",
                            "LookX",
                            "LookY",
                            "iX",
                            "iY",
                            ""
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "SetBooleanVariable"
                          },
                          "parameters": [
                            "CursorHit",
                            "True",
                            ""
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "StringVariable"
                      },
                      "parameters": [
                        "_CONFIG_.Players[0].InputType",
                        "=",
                        "_CONSTANTS_.InputType.Gamepad"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "SetNumberVariable"
                      },
                      "parameters": [
                        "LookX",
                        "=",
                        "XFromAngleAndDistance(LookAngle, MaxDistance / 5) + Player0.MuzzleX()"
                      ]
                    },
                    {
                      "type": {
                        "value": "SetNumberVariable"
                      },
                      "parameters": [
                        "LookY",
                        "=",
                        "YFromAngleAndDistance(LookAngle, MaxDistance / 5) + Player0.MuzzleY()"
                      ]
                    }
                  ],
                  "events": [
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "Raycast"
                          },
                          "parameters": [
                            "CursorCollisions",
                            "Player0.MuzzleX()",
                            "Player0.MuzzleY()",
                            "LookAngle",
                            "MaxDistance",
                            "iX",
                            "iY",
                            ""
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "SetBooleanVariable"
                          },
                          "parameters": [
                            "CursorHit",
                            "True",
                            ""
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "BooleanVariable"
                      },
                      "parameters": [
                        "CursorHit",
                        "",
                        ""
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "MettreXY"
                      },
                      "parameters": [
                        "Cursor",
                        "=",
                        "LookX",
                        "=",
                        "LookY"
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "BooleanVariable"
                      },
                      "parameters": [
                        "CursorHit",
                        "True",
                        ""
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "MettreXY"
                      },
                      "parameters": [
                        "Cursor",
                        "=",
                        "iX",
                        "=",
                        "iY"
                      ]
                    }
                  ]
                }
              ],
              "variables": [
                {
                  "name": "LookX",
                  "type": "number",
                  "value": 0
                },
                {
                  "name": "LookY",
                  "type": "number",
                  "value": 0
                },
                {
                  "name": "LookAngle",
                  "type": "number",
                  "value": 0
                },
                {
                  "name": "CursorHit",
                  "type": "boolean",
                  "value": false
                },
                {
                  "name": "MaxDistance",
                  "type": "number",
                  "value": 1000
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 52,
                "g": 44,
                "r": 40,
                "textB": 255,
                "textG": 255,
                "textR": 255
              },
              "comment": "\n\n"
            },
            {
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 52,
                "g": 44,
                "r": 40,
                "textB": 255,
                "textG": 255,
                "textR": 255
              },
              "comment": "Draw points to cursor"
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [],
              "events": [
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "AjoutObjConcern"
                      },
                      "parameters": [
                        "",
                        "CursorPoint"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "SetNumberVariable"
                      },
                      "parameters": [
                        "TotalPoints",
                        "=",
                        "PickedInstancesCount(CursorPoint)"
                      ]
                    },
                    {
                      "type": {
                        "value": "SetNumberVariable"
                      },
                      "parameters": [
                        "SpaceX",
                        "=",
                        "(Cursor.CenterX() - Player0.MuzzleX()) / TotalPoints"
                      ]
                    },
                    {
                      "type": {
                        "value": "SetNumberVariable"
                      },
                      "parameters": [
                        "SpaceY",
                        "=",
                        "(Cursor.CenterY() - Player0.MuzzleY()) / TotalPoints"
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::ForEach",
                  "object": "CursorPoint",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "value": "MettreXY"
                      },
                      "parameters": [
                        "CursorPoint",
                        "=",
                        "Player0.MuzzleX() + (PointIndex * SpaceX)",
                        "=",
                        "Player0.MuzzleY() + (PointIndex * SpaceY)"
                      ]
                    },
                    {
                      "type": {
                        "value": "SetNumberVariable"
                      },
                      "parameters": [
                        "PointIndex",
                        "+",
                        "1"
                      ]
                    }
                  ]
                }
              ],
              "variables": [
                {
                  "name": "TotalPoints",
                  "type": "number",
                  "value": 0
                },
                {
                  "name": "SpaceX",
                  "type": "number",
                  "value": 0
                },
                {
                  "name": "SpaceY",
                  "type": "number",
                  "value": 0
                },
                {
                  "name": "PointIndex",
                  "type": "number",
                  "value": 0
                }
              ]
            }
          ],
          "parameters": []
        },
        {
          "type": "BuiltinCommonInstructions::Comment",
          "color": {
            "b": 52,
            "g": 44,
            "r": 40,
            "textB": 255,
            "textG": 255,
            "textR": 255
          },
          "comment": "\n\n"
        },
        {
          "colorB": 82,
          "colorG": 68,
          "colorR": 62,
          "creationTime": 0,
          "name": "Move",
          "source": "",
          "type": "BuiltinCommonInstructions::Group",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 52,
                "g": 44,
                "r": 40,
                "textB": 255,
                "textG": 255,
                "textR": 255
              },
              "comment": "Invert Y for the coordinals"
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "value": "SetNumberVariable"
                  },
                  "parameters": [
                    "MoveX",
                    "=",
                    "MAINGAME.Input.MoveX"
                  ]
                },
                {
                  "type": {
                    "value": "SetNumberVariable"
                  },
                  "parameters": [
                    "MoveY",
                    "=",
                    "MAINGAME.Input.MoveY"
                  ]
                }
              ],
              "events": [
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "StringVariable"
                      },
                      "parameters": [
                        "_CONFIG_.Players[0].InputType",
                        "=",
                        "_CONSTANTS_.InputType.Keyboard"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "SetNumberVariable"
                      },
                      "parameters": [
                        "MoveY",
                        "=",
                        "-MoveY"
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "BuiltinCommonInstructions::Or"
                      },
                      "parameters": [],
                      "subInstructions": [
                        {
                          "type": {
                            "value": "BuiltinCommonInstructions::CompareNumbers"
                          },
                          "parameters": [
                            "abs(MoveX)",
                            ">",
                            "0"
                          ]
                        },
                        {
                          "type": {
                            "value": "BuiltinCommonInstructions::CompareNumbers"
                          },
                          "parameters": [
                            "abs(MoveY)",
                            ">",
                            "0"
                          ]
                        }
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "SetNumberVariable"
                      },
                      "parameters": [
                        "MoveAngle",
                        "=",
                        "AngleBetweenPositions(0,0,MoveX, MoveY)"
                      ]
                    },
                    {
                      "type": {
                        "value": "AddForceAL"
                      },
                      "parameters": [
                        "Player0",
                        "MoveAngle",
                        "Player0.Tank::MoveSpeed()",
                        ""
                      ]
                    },
                    {
                      "type": {
                        "value": "CustomObjects::Tank::RotateTo"
                      },
                      "parameters": [
                        "Player0",
                        "MoveAngle",
                        ""
                      ]
                    }
                  ]
                }
              ],
              "variables": [
                {
                  "name": "MoveX",
                  "type": "number",
                  "value": 0
                },
                {
                  "name": "MoveY",
                  "type": "number",
                  "value": 0
                },
                {
                  "name": "MoveAngle",
                  "type": "number",
                  "value": 0
                }
              ]
            }
          ],
          "parameters": []
        },
        {
          "type": "BuiltinCommonInstructions::Comment",
          "color": {
            "b": 52,
            "g": 44,
            "r": 40,
            "textB": 255,
            "textG": 255,
            "textR": 255
          },
          "comment": "\n\n"
        },
        {
          "colorB": 82,
          "colorG": 68,
          "colorR": 62,
          "creationTime": 0,
          "name": "Shoot",
          "source": "",
          "type": "BuiltinCommonInstructions::Group",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 52,
                "g": 44,
                "r": 40,
                "textB": 255,
                "textG": 255,
                "textR": 255
              },
              "comment": "We use a group of players for 2 things.\n1. Can read the behaviors, in this case we need the \"Bullet\" behavior\n2. We prepare for multiplayer by checking with the object name of player"
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "BuiltinCommonInstructions::CompareStrings"
                  },
                  "parameters": [
                    "Players.ObjectName()",
                    "=",
                    "\"Player0\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "SetNumberVariable"
                  },
                  "parameters": [
                    "LookAngle",
                    "=",
                    "trunc(Players.LookAngle())"
                  ]
                },
                {
                  "type": {
                    "value": "SetNumberVariable"
                  },
                  "parameters": [
                    "CursorAngle",
                    "=",
                    "trunc(AngleBetweenPositions(Players.MuzzleX(), Players.MuzzleY(), Cursor.X(), Cursor.Y()))"
                  ]
                },
                {
                  "type": {
                    "value": "SetNumberVariable"
                  },
                  "parameters": [
                    "DeltaAngle",
                    "=",
                    "abs(LookAngle - CursorAngle)"
                  ]
                }
              ],
              "events": [
                {
                  "type": "BuiltinCommonInstructions::Comment",
                  "color": {
                    "b": 52,
                    "g": 44,
                    "r": 40,
                    "textB": 255,
                    "textG": 255,
                    "textR": 255
                  },
                  "comment": "DeltaAngle its used to prevent that the tank can shoot behaind if the cursor is on it"
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "StringVariable"
                      },
                      "parameters": [
                        "MAINGAME.Input.Shoot",
                        "=",
                        "_CONSTANTS_.InputState.Pressed"
                      ]
                    },
                    {
                      "type": {
                        "value": "NumberVariable"
                      },
                      "parameters": [
                        "DeltaAngle",
                        "<",
                        "45"
                      ]
                    },
                    {
                      "type": {
                        "value": "BuiltinCommonInstructions::Not"
                      },
                      "parameters": [],
                      "subInstructions": [
                        {
                          "type": {
                            "value": "CollisionPoint"
                          },
                          "parameters": [
                            "SolidForTank",
                            "Players.MuzzleX()",
                            "Players.MuzzleY()"
                          ]
                        }
                      ]
                    },
                    {
                      "type": {
                        "value": "BuiltinCommonInstructions::Once"
                      },
                      "parameters": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "CreateByName"
                      },
                      "parameters": [
                        "",
                        "Bullets",
                        "Players.BulletObjects::ProjectileObjectName()",
                        "Player0.MuzzleX()",
                        "Player0.MuzzleY()",
                        "_CONSTANTS_.Layers.Main"
                      ]
                    },
                    {
                      "type": {
                        "value": "MettreXY"
                      },
                      "parameters": [
                        "Bullets",
                        "-",
                        "Bullets.Width() / 2",
                        "-",
                        "Bullets.Height() / 2"
                      ]
                    },
                    {
                      "type": {
                        "value": "CustomBehaviors::Bullet::ThrowForDebug"
                      },
                      "parameters": [
                        "Bullets",
                        "Bullet",
                        "Bullets",
                        "AngleBetweenPositions(Players.MuzzleX(), Players.MuzzleY(), Cursor.X(), Cursor.Y())",
                        "_CONFIG_.debug",
                        ""
                      ]
                    },
                    {
                      "type": {
                        "value": "CustomBehaviors::Bullet::SetParentId"
                      },
                      "parameters": [
                        "Bullets",
                        "Bullet",
                        "Players.Entity::Id()",
                        ""
                      ]
                    }
                  ]
                }
              ],
              "variables": [
                {
                  "name": "DeltaAngle",
                  "type": "number",
                  "value": 0
                },
                {
                  "name": "CursorAngle",
                  "type": "number",
                  "value": 0
                },
                {
                  "name": "LookAngle",
                  "type": "number",
                  "value": 0
                }
              ]
            }
          ],
          "parameters": []
        },
        {
          "type": "BuiltinCommonInstructions::Comment",
          "color": {
            "b": 52,
            "g": 44,
            "r": 40,
            "textB": 255,
            "textG": 255,
            "textR": 255
          },
          "comment": "\n\n"
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "CollisionNP"
              },
              "parameters": [
                "Players",
                "Ammo",
                "",
                "",
                ""
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "CustomBehaviors::BulletObjects::SetProjectileObject"
              },
              "parameters": [
                "Players",
                "BulletObjects",
                "Ammo.BulletObjects::ProjectileObjectName()",
                ""
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [
            {
              "type": {
                "value": "SeparateFromObjects"
              },
              "parameters": [
                "Players",
                "SolidForTank",
                ""
              ]
            }
          ]
        }
      ],
      "parameters": []
    },
    {
      "type": "BuiltinCommonInstructions::Comment",
      "color": {
        "b": 52,
        "g": 44,
        "r": 40,
        "textB": 255,
        "textG": 255,
        "textR": 255
      },
      "comment": "\n\n"
    }
  ]
}